@page "/takeaway"
@inject BlazorAthenaFrontend.Services.CartService CartService
@inject System.Net.Http.HttpClient httpClient
@using BlazorAthenaFrontend.Models;
@inject BlazorAthenaFrontend.Services.TokenService TokenService
@code
{
 /*For Token*/
 }
 @inject System.Net.Http.HttpClient HttpClient
 @using System.Net.Http.Headers;

<h3>ProductList</h3>

@code {
    private List<BlazorAthenaFrontend.Models.Product> productList;
    private List<Product> savedProducts = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        AddAuthorization();
        productList = await httpClient.GetFromJsonAsync<List<BlazorAthenaFrontend.Models.Product>>("https://localhost:7088/api/Product");
   
        savedProducts.AddRange(productList
        .Where(p => p.MerchID == null)
        .Select(p => new Product
        {
            ID = p.ID,
            Name = p.Name,
            Description = p.Description,
            Price = p.Price,
            Image = p.Image
            // Add other properties as needed
        }));

    }

    private async Task Purchase(Product chosenProduct)
    {
        Console.WriteLine("Purchase clicked");
        await CartService.AddProductToCartAsync(chosenProduct);

        //CartService.SelectedProducts.Add(chosenProduct); will add duplicate -_-

    }
    private void AddAuthorization()
    {

    var jwtToken = TokenService.Token;

    // Set the Authorization header with the JWT token
    HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwtToken);

    }

}


@if (productList == null)
{
    <p>Loading...</p>
}
else
{
    @foreach (var product in savedProducts)
    {
        <div class="card w-25">
            @{
                var imageUrl = $"https://localhost:7088/img/{product.Image}";
                Console.WriteLine($"Image URL: {imageUrl}");
            }
            @if (!string.IsNullOrEmpty(product.Image))
            {
                <img src="@imageUrl" class="card-img-top" alt="Product Image">
            }
            <div class="card-body">
                <h5 class="card-title">@product?.Name</h5>
                <p class="card-text">@product?.Description</p>
                <blockquote class="card-text">@(product?.Price ?? 0) SEK</blockquote>
                <button style="background-color: purple; color: white;" type="button" @onclick="() => Purchase(product)">Order</button>
            </div>
        </div>
    }
}
