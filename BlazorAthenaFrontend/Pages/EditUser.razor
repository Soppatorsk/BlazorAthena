@page "/edituser/{Id}"
@using AthenaResturantWebAPI.Models
@using BlazorAthenaFrontend.Services;
@using BlazorAthenaFrontend.Data.Identity;
@using System.Net.Http;
@using BlazorAthenaFrontend.Models;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ApplicationUser> UserManager
@inject UserService UserService
@inject NavigationManager NavigationManager

<h3>Edit User</h3>

@if (user == null || roles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="user" OnValidSubmit="HandleUserSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputText id="email" @bind-Value="user.Email" />
        <InputText id="username" @bind-Value="user.UserName" />
        <!-- Add other properties as needed -->
        <InputSelect @bind-Value="selectedRoleName" id="role">
            @foreach (var role in roles)
            {
                <option value="@role.Name">@role.Name</option>
            }
        </InputSelect>

        <button type="submit">Save</button>
    </EditForm>

}

@code {
    [Parameter]
    public string Id { get; set; }

    private string selectedRoleName;
    private List<IdentityRole> roles;
    private ApplicationUser user;

  protected override async Task OnInitializedAsync()
    {
        user = await UserService.FetchUserByIdAsync(Id);
        roles = await UserService.FetchRolesAsync(); // Fetch the roles from your service
        var role = await UserService.FetchUserRoleByIdAsync(Id);
        selectedRoleName = role.Name; // Convert to string
    }

    private async Task HandleUserSubmit()
    {
        // Update the user's email and username
        var updatedUser = await UserService.EditUserAsync(user);

        // Check if the user update was successful
        if (updatedUser != null)
        {
            // If the user update was successful, update the user's role
            var roleToAssign = roles.FirstOrDefault(r => r.Name == selectedRoleName);
            if (roleToAssign != null)
            {
                // Update the user's role
                var result = await UserService.EditUsersRolesAsync(user.UserName, roleToAssign.Name);
                if (result)
                {
                    NavigationManager.NavigateTo("/users");
                }
                else
                {
                    // Handle error
                }
            }
        }
        else
        {
            // Handle error
        }
    }


}
