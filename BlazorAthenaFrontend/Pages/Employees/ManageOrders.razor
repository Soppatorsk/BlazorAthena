@using BlazorAthenaFrontend.Models
@inject HttpClient httpClient
@using System.Security.Claims
@using BlazorAthenaFrontend.Services;
@inject BlazorAthenaFrontend.Services.TokenService TokenService
@inject BlazorAthenaFrontend.Services.JwtDecoderService JwtDecoderService
@inject NavigationManager NavigationManager
@page "/manageorders"

<h3>Manage Orders</h3>

@code {

    private List<Order> orderList;
    private List<Product> productList;
    private List<OrderLine> orderLineList;
    private List<Order> pendingOrders;

    protected override async Task OnInitializedAsync()
    {
        // var jwtToken = TokenService.Token;
        // var currentUser = CurrentUserService.GetCurrentUserFromToken(jwtToken);

        orderList = await httpClient.GetFromJsonAsync<List<Order>>("https://localhost:7088/api/Order");
        productList = await httpClient.GetFromJsonAsync<List<Product>>("https://localhost:7088/api/Product");
        orderLineList = await httpClient.GetFromJsonAsync<List<OrderLine>>("https://localhost:7088/api/OrderLine");
    }


}

            @foreach (var order in orderList)

            {           
                    <p>Order nr#: @order.ID Date: @order.TimeStamp.ToString("yyyy-MM-dd HH:mm:ss")</p>
                    @foreach (var orderLine in order.OrderLines)
                    {
                        <p>
                            @orderLine.Product.Name, Quantity: @orderLine.Quantity
                            <br />Price per product: @orderLine.Product.Price
                            <br>VAT @orderLine.Product.VAT%
                        </p>
                    }
                    <p>Total Amount: @order.SaleAmount SEK</p>

            }
