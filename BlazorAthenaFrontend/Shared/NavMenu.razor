@inject AuthenticationStateProvider AuthenticationStateProvider
@inject BlazorAthenaFrontend.Services.TokenService TokenService
@inject System.Net.Http.HttpClient HttpClient
@using System.Net.Http.Headers;
@using BlazorAthenaFrontend.Models;
@using System.IdentityModel.Tokens.Jwt;
@using System.Collections.Generic;
@using Newtonsoft.Json;
@using System.Linq;
@using System.Security.Claims;

@code {
    private IEnumerable<string> userRoles;
    private bool hasManagerRole;
    private bool hasEmployeeRole;
    private bool hasUserRole;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        // Now you can get user roles
        userRoles = user.FindAll(ClaimTypes.Role).Select(claim => claim.Value);

        // Call the getRole method to set the Authorization header and check Manager role
        getRole();
    }

    private void getRole()
    {
        var jwtToken = TokenService.Token;

        // Set the Authorization header with the JWT token if it's not null or empty
        if (!string.IsNullOrEmpty(jwtToken))
        {
            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwtToken);

            // Use the decoded token to check if the user has the 'Manager' role
            var decoded = DecodeToken(jwtToken);
            hasManagerRole = decoded.FindFirstValue("Role") == "Manager";
            hasEmployeeRole = decoded.FindFirstValue("Role") == "Employee";
            hasUserRole = decoded.FindFirstValue("Role") == "User";


        }
    }

    private ClaimsPrincipal DecodeToken(string token)
    {
        // Create an instance of JwtSecurityTokenHandler to handle JWT tokens
        var handler = new JwtSecurityTokenHandler();

        // Read and parse the input JWT token
        var jsonToken = handler.ReadToken(token) as JwtSecurityToken;

        // Create a new ClaimsPrincipal using the claims extracted from the JWT token
        return new ClaimsPrincipal(new ClaimsIdentity(jsonToken?.Claims));
    }
}

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorAthenaFrontend</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
    @*     <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div> *@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="foodmenu">
                <span class="oi oi-clipboard" aria-hidden="true"></span> Food Menu
            </NavLink>
        </div>

        @if (hasManagerRole)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users">
                    <span class="oi oi-clipboard" aria-hidden="true"></span> Users
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="customreport">
                    <span class="oi oi-clipboard" aria-hidden="true"></span> Reports
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="images">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Upload Image
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="ProductCrud">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Product Crud
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="subs">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Subcategories
                </NavLink>
            </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="SalesHistory">
                <span class="oi oi-clipboard" aria-hidden="true"></span> Sales History
            </NavLink>
			</div>
		}

        @if (hasUserRole)
        {
            
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="takeaway">
                <span class="oi oi-fire" aria-hidden="true"></span> Order takeaway
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="checkout">
                <span class="oi oi-cart" aria-hidden="true"></span> Checkout
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="MyOrders">
					<span class="oi oi-book" aria-hidden="true"></span> My Orders
            </NavLink>
        </div>
        }
   @*      <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div> *@
        @if (hasManagerRole || hasEmployeeRole)
        {
            <div class="nav-item px-3">
            <NavLink class="nav-link" href="manageorders">
                <span class="oi oi-plus" aria-hidden="true"></span> Manage orders
            </NavLink>
        </div>
        }        

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="aboutus">
                <span class="oi oi-map-marker" aria-hidden="true"></span> About us
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
